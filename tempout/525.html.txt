date
tue
nov
gmt
server
apache
dev
content
type
text
html
set
cookie
apache
gs35934584903542817
path
um
eecs
eecs
eecs
fall
introduction
to
operating
systems
professor
atul
prakash
class
time
tth
class
location
eecs
office
eecs
bldg
office
hours
t
th
phone
and
voice
mail
email
aprakash@umich.edu
ta
hengming
zou
discussions
w
eecs
w
eecs
office
hours
w
and
w
eecs
email
zou@eecs.umich
edu
ta
wengming
jiang
discussions
w
eecs
th
eecs
office
hours
t
f
eecs
email
weijiang@engin.umich
edu
ta
shailesh
nalawadi
discussions
m
eecs
m
eecs
office
hours
m
f
eecs
email
nalawad@engin.umich
edu
newsgroup
umich
eecs
class
approximate
semester
schedule
class
notes
handouts
announcements
etc
eecs
is
an
introductory
course
in
operating
systems
at
senior
undergraduate
level
or
first
year
graduate
level
the
objective
of
the
course
is
to
familiarize
you
with
the
issues
involved
in
the
design
and
implementation
of
modern
operating
systems
the
concepts
discussed
are
applicable
to
a
variety
of
systems
however
we
will
discuss
many
examples
that
are
drawn
from
historically
significant
and
modern
operating
systems
including
multics
unix
mach
and
windows
nt
topics
to
be
discussed
include
processes
and
threads
interprocess
communication
concurrency
and
synchronization
deadlocks
communication
in
distributed
systems
including
remote
procedure
calls
cpu
scheduling
virtual
memory
management
input
output
systems
disk
scheduling
file
systems
and
protection
and
security
students
are
expected
to
have
extensive
programming
experience
prior
to
this
course
knowledge
of
the
c
c
programming
language
and
familiarity
with
unix
is
required
prerequisites
computer
organization
eecs
and
data
structures
eecs
are
essential
class
textbook
operating
system
concepts
th
edition
by
silberchatz
and
glavin
addison
wesley
supplemental
reading
material
and
notes
provided
during
the
semester
other
suggested
textbooks
advanced
programming
in
the
unix
environment
by
stevens
addison
wesley
modern
operating
systems
by
tanenbaum
prentice
hall
assignments
you
will
complete
four
programming
projects
working
individually
or
in
groups
of
two
your
decision
relating
to
the
implementation
of
operating
systems
all
the
programming
will
be
in
the
c
or
c
programming
language
you
should
be
prepared
to
spend
substantial
amount
of
time
on
the
readings
and
on
programming
projects
there
will
also
be
several
homework
assignments
to
be
done
individually
grading
grades
will
be
based
on
two
exams
four
programming
assignments
and
several
homeworks
according
to
the
following
tentative
weightage
homeworks
midterm
final
four
programming
projects
from
my
experience
in
teaching
software
courses
in
the
past
most
people
do
very
well
on
programming
projects
so
exams
and
homeworks
end
up
being
the
distinguishing
factors
that
determine
the
grade
for
most
students
on
the
other
hand
doing
poorly
on
the
programming
projects
is
a
sure
way
to
fail
the
course
also
note
that
your
grade
is
only
determining
your
performance
during
the
term
it
is
not
determining
your
future
potential
how
well
you
will
be
able
to
apply
the
course
in
your
employment
etc
and
in
the
end
how
well
you
do
in
the
future
is
what
really
matters
so
it
is
important
to
not
lose
sight
of
the
bigger
picture
beyond
grades
instead
simply
focus
on
doing
the
course
to
the
best
of
your
potential
and
making
sure
to
take
advantage
of
tas
any
myself
to
learn
the
material
many
employers
treat
the
knowledge
of
the
material
in
the
course
as
being
a
true
test
of
an
experienced
software
practioner
policy
on
collaboration
unethical
behavior
such
as
copying
modifying
someone
else
s
project
assignment
code
looking
into
other
students
directories
for
material
when
they
do
not
expect
you
to
copying
homeworks
etc
is
not
permissible
on
the
other
hand
you
are
encouraged
to
discuss
homework
problems
and
project
assignments
with
each
other
that
fosters
learning
and
most
of
the
work
in
computer
industry
is
done
as
a
team
effort
in
such
a
case
please
write
the
names
of
the
students
you
discussed
homeworks
or
projects
on
your
submissions
however
note
that
the
homework
solutions
or
actual
code
must
not
be
shared
homeworks
must
be
written
individually
and
any
code
submitted
must
be
yours
unless
instructor
s
permission
is
taken
and
the
source
acknowledged
class
communication
tools
we
will
use
a
variety
of
mechanisms
to
communicate
within
the
class
most
will
have
links
from
the
eecs
home
page
at
http://www.eecs.umich.edu/~aprakash/482.html.
tools
will
include
class
newsgroup
an
experimental
java
based
chat
facility
and
of
course
email
also
we
will
attempt
to
provide
most
of
the
handouts
on
line
