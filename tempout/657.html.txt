date
wednesday
nov
gmt
server
ncsa
mime
version
content
type
text
html
last
modified
friday
aug
gmt
content
length
locality
management
onr
arpa
contract
n00014
j
locality
management
in
large
scale
multiprocessors
computer
science
department
university
of
rochester
rochester
ny
through
this
project
is
developing
techniques
that
improve
locality
of
reference
in
parallel
programs
so
as
to
admit
efficient
execution
on
large
scale
multiprocessors
we
use
a
combination
of
simulation
analytic
studies
and
experimentation
to
compare
alternative
techniques
for
locality
management
under
various
architectural
assumptions
using
a
wide
variety
of
benchmark
applications
we
seek
to
quantify
the
performance
impact
of
individual
techniques
at
the
architecture
operating
system
runtime
library
and
user
level
and
the
interaction
between
techniques
across
layers
in
the
system
this
work
will
lead
to
a
better
understanding
of
the
role
of
locality
and
data
sharing
in
parallel
program
performance
and
a
comprehensive
understanding
of
the
effectiveness
of
techniques
for
locality
management
and
their
interactions
principal
investigators
thomas
j
leblanc
professor
and
chair
leblanc@cs.rochester
edu
michael
l
scott
associate
professor
scott@cs.rochester
edu
graduate
students
leonidas
kontothanassis
maged
michael
wagner
meira
recent
graduates
jack
veenstra
silicon
graphics
inc
mark
crovella
boston
university
ricardo
bianchini
recent
accomplishments
supercomputing
on
next
generation
networks
publications
project
specific
papers
systems
technical
report
archive
the
mint
multiprocessor
simulator
mint
is
a
software
package
designed
to
ease
the
process
of
constructing
event
driven
memory
hierarchy
simulators
for
multiprocessors
it
provides
a
set
of
simulated
processors
that
run
standard
unix
executable
files
compiled
for
a
mips
r3000
based
multiprocessor
these
generate
multiple
streams
of
memory
reference
events
that
drive
a
user
provided
memory
system
simulator
mint
uses
a
novel
hybrid
technique
that
exploits
the
best
aspects
of
native
execution
and
software
interpretation
to
minimize
the
overhead
of
processor
simulation
combined
with
related
techniques
to
improve
performance
this
approach
makes
simulation
on
uniprocessor
hosts
extremely
efficient
mint
is
available
without
charge
to
academic
and
research
sites
readme
file
mint
tutorial
and
user
manual
macsots
paper
compressed
source
code
tar
format
arpa
project
page
last
change
march
scott@cs.rochester
edu
