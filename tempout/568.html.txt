date
tue
nov
gmt
server
apache
content
type
text
html
content
length
last
modified
mon
nov
gmt
cis
computer
architecture
fall
cis
computer
architecture
fall
instructor
allen
d
malony
url
http://www.cs.uoregon.edu/classes/cis629/
computer
architecture
is
the
science
and
art
of
selecting
and
interconnecting
hardware
components
to
create
a
computer
that
meets
functional
performance
and
cost
goals
this
course
qualitatively
and
quantitatively
examines
computer
design
tradeoffs
our
focus
will
be
on
processor
architectures
memory
systems
and
multiprocessor
machines
in
particular
we
will
study
instruction
level
parallelism
super
pipelining
and
super
scalar
arisc
processor
design
memory
hierarchies
cache
systems
and
coherency
mechanisms
and
multiprocessor
architectures
and
parallel
computing
announcements
instructor
lecture
required
text
reference
text
readings
lecture
notes
homeworks
examinations
programming
project
grading
approximate
schedule
tutorials
tools
miscellanea
academic
misconduct
class
roster
announcements
required
text
is
available
in
the
bookstore
readings
packet
is
available
in
the
bookstore
please
read
papers
in
readings
packet
please
read
paper
in
readings
packet
please
read
papers
and
in
readings
packet
please
read
cache
coherence
papers
in
readings
packet
please
read
sting
paper
in
readings
packet
please
do
assignment
describe
in
the
programming
section
instructor
allen
d
malony
office
deschutes
hall
email
malony@cs.uoregon
edu
office
hours
monday
wednesday
or
by
appointment
lecture
time
tuesday
thursday
place
gilbert
hall
required
text
harold
s
stone
high
performance
computer
architecture
third
edition
addison
wesley
reference
text
john
l
hennessy
and
david
a
patterson
computer
architecture
a
quantitative
approach
morgan
kaufmann
publishers
second
edition
readings
selected
readings
background
and
processor
design
selected
readings
memory
system
architectures
selected
readings
multiprocessor
architectures
each
part
of
the
course
will
be
accompanied
by
a
set
of
papers
from
the
computer
architecture
literature
the
reading
packets
will
be
available
in
the
bookstore
lecture
notes
lecture
notes
will
be
made
available
as
they
are
developed
see
links
in
schedule
homework
there
will
be
two
homework
assignments
many
problems
will
require
the
review
of
material
that
is
touched
upon
but
not
covered
in
depth
in
class
assignments
will
be
due
in
class
on
the
due
date
no
late
assignments
will
be
accepted
except
under
extreme
non
academic
circumstances
discussed
with
the
instructor
at
least
one
week
before
the
assignment
is
due
homework
figure
and
figure
errata
solutions
homework
this
has
been
combined
with
the
programming
assignment
examinations
midterm
takehome
oct
halloween
due
nov
please
advise
me
of
any
conflicts
with
these
likely
exam
times
before
the
end
of
the
second
week
of
classes
programming
the
topic
of
the
programming
assignment
is
cache
simulation
the
programming
assigment
is
combined
with
the
second
homework
assignment
there
are
two
parts
part
run
the
following
trace
files
through
the
dinero
cache
simulator
use
the
dinero
server
found
in
this
web
page
cc1
found
in
dinero
server
options
spice
found
in
dinero
server
options
tex
found
in
dinero
server
options
show
results
for
different
levels
of
cache
size
unified
and
split
associativity
and
block
sizes
explain
the
results
that
you
see
part
the
following
sample
code
models
an
kbyte
direct
mapped
cache
with
byte
lines
blocks
it
treats
reads
and
writes
in
the
samewas
as
a
simple
reference
included
is
only
the
routine
that
checks
for
a
reference
in
the
cache
and
accummulates
total
references
and
misses
not
included
are
the
i
o
routines
to
read
in
a
reference
trace
assuming
it
comes
from
a
file
or
stdio
and
to
produce
output
statistics
include
include
define
cache_size
define
block_shift
long
tags
cache_size
block_shift
long
references
misses
void
reference
long
address
int
index
address
cache_size
block_shift
long
tag
address
block_shift
if
tags
index
tag
misses
tags
index
tag
references
a
add
necessary
i
o
support
as
briefly
described
to
the
code
above
to
make
this
into
a
cache
simulation
program
that
takes
a
reference
trace
file
b
write
a
routine
to
model
a
way
and
a
way
set
associative
cache
of
the
same
size
c
demonstrate
the
operation
of
all
three
simulators
with
three
programs
of
your
own
choosing
that
is
find
or
write
three
programs
they
can
be
simple
from
which
you
can
capture
address
references
to
drive
your
simulators
one
thought
is
to
get
three
linpack
codes
note
you
need
to
modify
the
programs
to
capture
references
concentrate
only
on
data
references
this
assignment
will
be
due
on
dec
term
project
the
term
project
will
be
to
write
a
paper
that
surveys
an
area
within
computer
architecture
the
paper
should
summarize
work
in
an
area
giving
extensive
references
at
least
present
opinions
of
others
for
or
against
various
options
again
with
references
conclude
with
your
opinion
of
the
strengths
and
weaknesses
of
the
arguments
given
you
will
be
graded
on
the
completeness
of
your
survey
the
accuracy
of
your
summaries
and
the
support
you
give
for
your
opinions
some
possible
survey
topics
are
compiler
transformations
to
improve
memory
behavior
superscalar
superpipelined
processors
vs
vliw
effect
on
architecture
of
changing
technology
you
might
consider
different
types
of
technology
high
performance
i
o
e
g
for
storage
or
network
communication
contrast
of
state
of
the
art
processors
massively
parallel
processing
systems
scalable
architecture
technologies
some
aspect
of
the
history
of
computer
architecture
the
topic
chosen
should
be
something
that
you
are
particularly
interested
in
there
are
many
references
for
papers
including
proc
of
the
int
l
symposium
on
computer
architecture
isca
proc
of
the
conf
on
architectural
support
for
programming
languages
and
operating
systems
asplos
int
l
conf
on
parallel
processing
icpp
supercomputing
conf
int
l
conf
on
supercomputing
ics
ieee
trans
on
computers
acm
trans
on
computer
systems
ieee
computer
grading
homework
midterm
programming
term
project
approximate
schedule
date
topic
assignment
oct
introduction
chapter
oct
performance
costs
chapter
readings
oct
pipelining
chapter
readings
oct
pipelining
continued
chapter
readings
oct
instruction
level
parallelism
ilp
chapter
readings
tutorial
oct
ilp
overcoming
data
hazards
chapter
readings
tutorial
oct
ilp
reducing
branch
penalties
chapter
readings
tutorial
oct
ilp
superscalar
tutorial
oct
ilp
limits
takehome
midterm
nov
cache
systems
chapter
nov
cache
systems
chapter
readings
nov
memory
systems
chapter
section
and
readings
nov
multiprocessor
systems
chapter
chapter
readings
nov
no
class
work
on
project
nov
cache
coherent
memory
systems
chapter
readings
nov
the
sequent
sting
architecture
readings
sequent
sting
paper
nov
multiprocessor
architectures
trip
to
sequent
nov
thanksgiving
thanksgiving
dec
multiprocessor
architectures
chapter
readings
dec
multiprocessor
architectures
chapter
readings
dec
project
due
project
due
this
class
will
be
taught
by
john
conery
this
class
will
be
taught
by
jan
cuny
this
is
a
monday
makeup
class
tutorials
prof
driscoll
portland
state
university
has
developed
an
online
tutorial
on
superscalar
microprocessor
design
each
student
must
work
through
the
expert
level
of
the
tutorial
tools
wisconsin
architectural
research
tool
set
warts
warts
will
hopefully
be
available
for
project
use
a
dinero
server
dinero
by
remote
dinero
is
a
c
based
cache
simulation
program
that
is
provided
as
part
of
warts
mint
a
fast
program
driven
simulator
for
multiprocessor
systems
mint
will
be
available
for
project
use
instruction
level
simulation
and
tracing
this
contains
a
huge
list
of
simulators
emulators
and
tracing
tools
including
an
extensive
bibliography
as
well
as
list
of
people
to
contact
miscellanea
computer
architecture
home
page
the
www
computer
architecture
page
was
designed
at
the
university
of
wisconsin
madison
to
act
as
a
central
repository
of
links
pointing
to
information
relevant
to
computer
architecture
researchers
and
students
it
contains
pointers
to
over
seventy
major
architecture
research
groups
and
projects
most
major
computer
architecture
related
conferences
industrial
pages
organizations
and
news
groups
and
a
selection
of
miscellaneous
links
of
interest
to
computer
architects
usenet
newsgroup
for
computer
architecture
comp
arch
acm
special
interest
group
on
computer
architecture
sigarch
cpu
info
center
info
on
current
future
processors
the
performance
database
server
benchmarks
faq
from
the
newsgroup
comp
benchmarks
spec
benchmarks
spec92
spec95
benchmark
suite
from
the
standard
performance
evaluation
corporation
online
raw
data
for
cache
performance
of
the
spec92
benchmark
suite
academic
misconduct
university
of
oregon
s
student
conduct
code
student
academic
integrity
a
brochure
put
out
by
the
uo
dean
of
students
class
roster
al
fudhail
maan
alaalove@cs.uoregon
edu
appayya
vimala
vimala@cs.uoregon
edu
fiskio
lasseter
jo
johnfl@cs.uoregon
edu
galli
mark
mgalli@cs.uoregon
edu
gao
yi
ygao@cs.uoregon
edu
lindlan
kathleen
klindlan@cs.uoregon
edu
ma
chia
cha
chiache@cs.uoregon
edu
palsule
prachi
pvp@cs.uoregon
edu
pusca
lornel
ionel@cs.uoregon
edu
reimer
yolanda
yreimer@cs.uoregon
edu
robertson
chad
carober@cs.uoregon
edu
sai
teck
tecks@cs.uoregon
edu
sather
jim
jims@cs.uoregon
edu
sheth
sai
saisheth@cs.uoregon
edu
skidmore
jenifer
skid@cs.uoregon
edu
svitak
john
svitak@cs.uoregon
edu
wang
chien
chung
chien@cs.uoregon
edu
wang
zhunqin
zhunqinw@cs.uoregon
edu
xiao
yong
xiao@cs.uoregon
edu
xue
jianzhong
xue@cs.uoregon
edu
yang
shuang
sqyang@cs.uoregon
edu
yao
lixing
ylixing@cs.uoregon
edu
