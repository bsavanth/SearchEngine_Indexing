date
wed
nov
gmt
server
ncsa
content
type
text
html
csci
analysis
of
algorithms
computer
science
analysis
of
algorithms
this
is
the
home
page
for
computer
science
analysis
of
algorithms
during
the
spring
of
this
class
is
taught
by
prof
doug
ierardi
handouts
exams
and
problem
sets
may
be
found
below
and
on
linked
documents
futher
information
including
course
notes
former
exams
and
handouts
for
computer
science
may
currently
be
found
in
the
course
directory
csci570
on
scf
usc
edu
i
ll
note
here
that
you
may
find
the
algorithms
course
materials
on
the
net
web
page
valuable
and
interesting
grades
handouts
syllabus
red
black
trees
leftist
heaps
amortized
analysis
including
skew
heaps
and
splay
trees
competative
analysis
of
online
algorithms
assignments
and
problem
set
due
january
solutions
here
problem
set
binary
heaps
binomial
heaps
and
red
black
trees
and
problem
on
implementing
decreasekey
from
handout
on
leftist
heaps
due
february
solutions
here
problem
set
show
that
movetofront
is
not
c
competitive
for
any
c
lt
i
e
this
is
a
tight
bound
give
a
tight
bound
on
the
competitiveness
of
lru
for
the
caching
problem
assuming
that
your
cache
can
hold
at
most
k
pages
here
you
re
counting
the
number
of
cache
misses
read
do
read
do
a
few
fun
problems
due
monday
february
th
solutions
here
problem
set
a
skip
list
is
constructed
as
follows
every
element
has
a
pointer
at
level
which
connects
all
of
them
into
a
sorted
linked
list
for
each
i
some
subset
of
the
elements
at
level
i
have
level
i
pointers
which
connect
them
into
a
sorted
linked
list
the
structure
is
constructed
as
follows
suppose
you
re
given
such
a
list
to
insert
the
next
element
x
into
the
list
search
for
where
it
goes
in
the
level
list
and
splice
it
in
then
i
while
flip
tails
add
x
to
the
list
at
level
i
i
sketch
a
proof
that
the
resulting
list
has
height
o
lg
n
with
high
probability
assuming
that
the
probability
of
heads
is
p
p
o
lg
n
time
suppose
that
you
have
access
to
a
biased
coin
with
unknown
bias
althogh
probability
of
heads
is
strictly
between
and
show
how
to
use
this
coin
to
simulate
a
fair
coin
suppose
that
i
give
you
a
piece
of
paper
with
n
lines
drawn
across
its
surface
they
re
arbitrarily
oriented
and
each
goes
from
edge
to
edge
there
s
a
dot
drawn
somewhere
on
the
paper
representing
the
origin
you
repeat
the
following
choose
one
of
the
remaining
lines
at
random
and
cut
the
paper
along
it
then
hold
onto
the
piece
that
has
the
dot
origin
and
throw
the
rest
away
repeat
this
until
all
lines
have
been
cut
so
you
re
left
with
the
smallest
convex
region
containing
the
origin
that
is
bounded
by
the
given
line
segments
fact
throughout
this
process
the
total
number
of
times
that
you
cut
across
any
of
the
remaining
lines
is
expected
to
be
o
n
ln
n
use
this
fact
to
design
an
algorithm
which
given
n
half
planes
each
containing
the
origin
computes
their
intersection
in
expected
time
o
n
lg
n
by
incrementally
adding
one
half
plane
at
a
time
recall
the
description
of
treaps
given
in
class
briefly
every
element
has
a
key
and
a
priority
they
are
put
into
a
binary
tree
such
that
they
have
an
inorder
ordering
binary
search
tree
property
with
respect
to
keys
and
a
heap
ordering
with
respect
to
priorities
a
random
treap
is
one
where
the
priorities
have
been
assigned
randomly
for
this
problem
we
ll
just
assume
that
the
prioirities
are
given
by
some
random
permutation
let
x
be
any
element
and
a
the
set
of
ancestors
of
x
in
the
random
treap
let
x
be
the
length
of
the
path
from
the
root
to
x
then
x
keys
x
and
in
a
use
this
obvious
fact
to
give
a
precise
value
for
the
expected
depth
of
x
when
x
is
the
m
th
largest
element
in
the
tree
i
e
solve
for
the
leading
constants
as
well
you
can
tack
on
a
o
at
the
end
if
you
d
like
recall
that
to
insert
an
element
you
proceed
as
in
a
binary
search
tree
then
attach
a
random
priority
and
rotate
up
the
tree
until
heap
ordering
has
been
restored
argue
that
the
expected
number
of
rotations
on
an
insertion
is
deletion
in
a
treap
is
handled
in
a
rather
odd
way
to
delete
x
rotate
it
down
the
tree
until
it
is
a
leaf
and
remove
it
describe
this
procedure
in
more
detail
then
show
that
the
expected
number
of
rotations
is
due
monday
march
th
solutions
here
problem
set
also
consider
the
following
variant
which
is
an
optimization
problem
find
a
match
which
minimizes
the
number
of
characters
matched
to
gap
characters
this
suggestions
came
up
a
few
times
in
class
graph
review
and
due
thursday
april
th
solutions
here
exams
take
home
midterm
exam
take
home
final
exam
available
in
html
or
in
postscript
demos
if
you
have
a
java
enhanced
browser
check
these
out
interactive
binary
search
tree
demos
dj
ierardi
langevin
usc
edu
mon
may
at
pm
