date
wed
nov
gmt
server
ncsa
content
type
text
html
last
modified
tue
aug
gmt
content
length
cs
introduction
to
computer
science
ii
introduction
to
computer
science
ii
updates
and
errata
special
fixups
rr
help
rewrite
rules
asst3
debug
help
debugging
assignment
tests
midterm
review
midterm
exam
final
review
final
exam
handouts
course
staff
handouts
introduction
syllabus
grading
policy
assignment
login
help
lisp
help
mail
help
make
help
rcs
help
unix
help
vi
help
pure
lisp
arithmetic
and
rewrite
rules
pure
lisp
arithmetic
and
rewrite
rules
example
code
assignment
answers
txt
functions
lsp
functions
in
makefile
symbolic
data
symbolic
data
example
code
procedure
abstraction
procedure
abstraction
example
code
rational
expressions
derivative
out
canonical
x
lsp
canonical
x
out
a
canonical
rational
expression
rewrite
rules
canonical
lsp
canonical
out
propositional
calculus
assignment
propositional
calculus
lsp
propositional
calculus
in
makefile
search
search
lsp
picnic
out
game
search
assignment
game
search
lsp
game
search
alpha
beta
lsp
tictactoe
in
makefile
resolution
theorem
proving
assignment
answers
txt
resolution
in
search
lsp
makefile
computer
architecture
assembly
language
assembly_language
out
sum
asm
memory
allocator
memory_allocator
asm
memory_allocator_test
asm
memory_allocator_test
out
hspim
help
assignment
fibonacci
asm
memo_fibonacci
asm
tail_fibonacci
asm
makefile
c
basics
c
comments
c
mid
block
declarations
c
bool
type
c
overloading
c
inline
functions
c
const
and
enum
c
default
arguments
c
basic
output
c
operators
c
reference
types
c
class
name
declaration
c
member
functions
c
constructors
c
public
and
private
non
deterministic
finite
automata
assignment
ndfa
h
ndfa
cc
makefile
basic
h
estream
h
error
cc
basic
cc
estream
cc
a
lexical
analysis
b
parsing
assignment
rep
sp
parser
h
parser
cc
rep
cc
rep
in
makefile
lisp51
lisp51
preliminary
design
scanner
specification
meta
lisp
lsp
evaluator
prototype
h
files
basic
h
catch
h
cons
h
const
h
estream
h
eval
h
fixnum
h
function
h
lisp
h
object
h
obtype
h
preserve
h
prims
h
scanner
h
symbol
h
cc
files
basic
cc
catch
cc
error
cc
estream
cc
length
cc
lisp
cc
preserve
cc
prims
cc
toplevel
cc
liblisp
a
makefile
assignments
assignment
assignment
assignment
answers9
txt
answers10
txt
cons
cc
eval
cc
fixnum
cc
function
cc
gc
cc
gc
h
obtype
cc
p_car
cc
p_cdr
cc
p_cons
cc
p_gc
cc
p_gclim
cc
p_sgclim
cc
parser
cc
scanner
cc
symbol
cc
test
defs
in
test
primitives
in
test
scanner
in
test
with
gc
in
test
without
gc
in
to
be
lisp51
lsp
makefile
unification
and
natural
language
analysis
course
staff
instructor
dr
robert
walton
walton@das.harvard
edu
teaching
fellow
christopher
thorpe
cthrope@fas.harvard
edu
cs51
project
book
the
computer
science
project
book
is
an
informal
text
book
for
the
course
maintained
by
volunteers
this
is
a
compressed
version
of
the
postscript
file
feel
free
to
download
it
and
print
it
in
the
science
center
however
we
recommend
that
you
purchase
a
printed
and
bound
copy
from
the
sourcebook
center
in
the
basement
of
the
science
center
i
tried
printing
this
once
and
it
took
hours
plus
i
had
to
hole
punch
the
hardcopy
myself
that
ate
up
an
afternoon
my
book
was
also
twice
as
bulky
because
i
did
not
want
to
fiddle
with
printing
double
sided
make
life
easy
buy
the
book
lisp
links
we
will
try
to
place
interesting
lisp
related
materials
in
this
section
clisp
for
linux
this
is
a
user
friendly
common
lisp
implementation
that
many
of
the
tfs
prefer
on
their
own
systems
for
special
instructions
on
how
to
install
this
if
you
are
using
elf
binaries
consult
this
lisp
faq
online
common
lisp
manual
you
can
search
this
file
for
descriptions
of
the
common
lisp
functions
and
macros
cs51
lisp
style
guide
word7
postscript
spim
links
michael
barrientos
has
kindly
contributed
instructions
on
how
one
can
properly
configure
spim
to
run
on
linux
machines
cs
introduction
to
computer
science
ii
lib51@fas.harvard
edu
